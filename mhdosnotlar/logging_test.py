##loglarÄ± kaydeder
"""    :

        ProgramÄ±n Ã§alÄ±ÅŸÄ±rken yaptÄ±ÄŸÄ± iÅŸlemleri kaydetmek

        HatalarÄ±, uyarÄ±larÄ±, bilgi mesajlarÄ±nÄ± saklamak

        GeliÅŸtirme ve hata ayÄ±klamada Ã§ok faydalÄ±dÄ±r

ğŸ“Œ AvantajÄ±: print() gibi ekrana yazmaz sadece, dosyaya kaydedebilir, farklÄ± seviyelerde log tutabilir.
ogging kÃ¼tÃ¼phanesi mesajlarÄ± Ã¶nem derecesine gÃ¶re kategorize eder:
Seviye	AnlamÄ±
DEBUG	En ayrÄ±ntÄ±lÄ±, hata ayÄ±klama bilgileri
INFO	Genel bilgi mesajlarÄ±
WARNING	UyarÄ±lar
ERROR	Hatalar
CRITICAL	Ã‡ok ciddi hatalar
basicConfig()

    Loglama sisteminin temel ayarlarÄ±nÄ± yapar.

    Parametreler:

        level â†’ Loglama seviyesi (DEBUG, INFO, vb.)

        format â†’ Log mesajÄ±nÄ±n biÃ§imi

        filename â†’ LoglarÄ±n yazÄ±lacaÄŸÄ± dosya (yazmazsan konsola yazar)

        filemode â†’ Dosya modu (w = Ã¼zerine yaz, a = ekle)"""
import logging

# Temel ayarlar
logging.basicConfig(
    level=logging.DEBUG,
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    filename="uygulama.log", ##bunlarÄ± yazmazsan konsola yazar
    filemode="w"
)

# Logger oluÅŸtur
logger = logging.getLogger("AnaModul")

# Log mesajlarÄ±
logger.debug("Bu debug mesajÄ±dÄ±r")
logger.info("Program baÅŸladÄ±")
logger.warning("Disk alanÄ± azaldÄ±")
logger.error("Dosya bulunamadÄ±")
logger.critical("Sistem Ã§Ã¶kÃ¼yor!")

# Loglama sistemini kapat
logging.shutdown()
